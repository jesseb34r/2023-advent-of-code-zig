test
+- run test stderr
Getting cases for Map: ???.### with Key: { 1, 1, 3 }

current_map_index: 0 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 1 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 2 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 3 and current_key_index: 0
'.' => Continue
current_map_index: 4 and current_key_index: 0
Checking if key position is valid. Key: 1 and Map Slice: ###
damaged_section_length: 3
'#' and invalid key position => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?.###
damaged_section_length: 1
current_map_index: 2 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 4 and current_key_index: 1
Checking if key position is valid. Key: 1 and Map Slice: ###
damaged_section_length: 3
'#' and invalid key position => Fail


Checking if key position is valid. Key: 1 and Map Slice: ??.###
damaged_section_length: 1
current_map_index: 1 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 3 and current_key_index: 1
'.' => Continue
current_map_index: 4 and current_key_index: 1
Checking if key position is valid. Key: 1 and Map Slice: ###
damaged_section_length: 3
'#' and invalid key position => Fail


Checking if key position is valid. Key: 1 and Map Slice: ???.###
damaged_section_length: 1
current_map_index: 0 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 2 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 3 and current_key_index: 1
'.' => Continue
current_map_index: 4 and current_key_index: 1
Checking if key position is valid. Key: 1 and Map Slice: ###
damaged_section_length: 3
'#' and invalid key position => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?.###
damaged_section_length: 1
current_map_index: 2 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 4 and current_key_index: 2
Checking if key position is valid. Key: 3 and Map Slice: ###
damaged_section_length: 3
'#' and valid key position => use key and continue
current_map_index: 8 and current_key_index: 3
Keys are all used and at end of map => Success




Getting cases for Map: .??..??...?##. with Key: { 1, 1, 3 }

current_map_index: 0 and current_key_index: 0
'.' => Continue
current_map_index: 1 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 2 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 3 and current_key_index: 0
'.' => Continue
current_map_index: 4 and current_key_index: 0
'.' => Continue
current_map_index: 5 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 6 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 7 and current_key_index: 0
'.' => Continue
current_map_index: 8 and current_key_index: 0
'.' => Continue
current_map_index: 9 and current_key_index: 0
'.' => Continue
current_map_index: 10 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 0
Checking if key position is valid. Key: 1 and Map Slice: ##.
damaged_section_length: 2
'#' and invalid key position => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?##.
damaged_section_length: 3

Checking if key position is valid. Key: 1 and Map Slice: ?...?##.
damaged_section_length: 1
current_map_index: 6 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 8 and current_key_index: 1
'.' => Continue
current_map_index: 9 and current_key_index: 1
'.' => Continue
current_map_index: 10 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 1
Checking if key position is valid. Key: 1 and Map Slice: ##.
damaged_section_length: 2
'#' and invalid key position => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?##.
damaged_section_length: 3


Checking if key position is valid. Key: 1 and Map Slice: ??...?##.
damaged_section_length: 1
current_map_index: 5 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 7 and current_key_index: 1
'.' => Continue
current_map_index: 8 and current_key_index: 1
'.' => Continue
current_map_index: 9 and current_key_index: 1
'.' => Continue
current_map_index: 10 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 1
Checking if key position is valid. Key: 1 and Map Slice: ##.
damaged_section_length: 2
'#' and invalid key position => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?##.
damaged_section_length: 3


Checking if key position is valid. Key: 1 and Map Slice: ?..??...?##.
damaged_section_length: 1
current_map_index: 2 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 4 and current_key_index: 1
'.' => Continue
current_map_index: 5 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 6 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 7 and current_key_index: 1
'.' => Continue
current_map_index: 8 and current_key_index: 1
'.' => Continue
current_map_index: 9 and current_key_index: 1
'.' => Continue
current_map_index: 10 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 1
Checking if key position is valid. Key: 1 and Map Slice: ##.
damaged_section_length: 2
'#' and invalid key position => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?##.
damaged_section_length: 3

Checking if key position is valid. Key: 1 and Map Slice: ?...?##.
damaged_section_length: 1
current_map_index: 6 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 8 and current_key_index: 2
'.' => Continue
current_map_index: 9 and current_key_index: 2
'.' => Continue
current_map_index: 10 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 2
Checking if key position is valid. Key: 3 and Map Slice: ##.
Key too big. map_slice length: 3, index of '.': 2
'#' and invalid key position => Fail

Checking if key position is valid. Key: 3 and Map Slice: ?##.
damaged_section_length: 3
current_map_index: 10 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 14 and current_key_index: 3
Keys are all used and at end of map => Success



Checking if key position is valid. Key: 1 and Map Slice: ??...?##.
damaged_section_length: 1
current_map_index: 5 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 7 and current_key_index: 2
'.' => Continue
current_map_index: 8 and current_key_index: 2
'.' => Continue
current_map_index: 9 and current_key_index: 2
'.' => Continue
current_map_index: 10 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 2
Checking if key position is valid. Key: 3 and Map Slice: ##.
Key too big. map_slice length: 3, index of '.': 2
'#' and invalid key position => Fail

Checking if key position is valid. Key: 3 and Map Slice: ?##.
damaged_section_length: 3
current_map_index: 10 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 14 and current_key_index: 3
Keys are all used and at end of map => Success




Checking if key position is valid. Key: 1 and Map Slice: ??..??...?##.
damaged_section_length: 1
current_map_index: 1 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 3 and current_key_index: 1
'.' => Continue
current_map_index: 4 and current_key_index: 1
'.' => Continue
current_map_index: 5 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 6 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 7 and current_key_index: 1
'.' => Continue
current_map_index: 8 and current_key_index: 1
'.' => Continue
current_map_index: 9 and current_key_index: 1
'.' => Continue
current_map_index: 10 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 1
Checking if key position is valid. Key: 1 and Map Slice: ##.
damaged_section_length: 2
'#' and invalid key position => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?##.
damaged_section_length: 3

Checking if key position is valid. Key: 1 and Map Slice: ?...?##.
damaged_section_length: 1
current_map_index: 6 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 8 and current_key_index: 2
'.' => Continue
current_map_index: 9 and current_key_index: 2
'.' => Continue
current_map_index: 10 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 2
Checking if key position is valid. Key: 3 and Map Slice: ##.
Key too big. map_slice length: 3, index of '.': 2
'#' and invalid key position => Fail

Checking if key position is valid. Key: 3 and Map Slice: ?##.
damaged_section_length: 3
current_map_index: 10 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 14 and current_key_index: 3
Keys are all used and at end of map => Success



Checking if key position is valid. Key: 1 and Map Slice: ??...?##.
damaged_section_length: 1
current_map_index: 5 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 7 and current_key_index: 2
'.' => Continue
current_map_index: 8 and current_key_index: 2
'.' => Continue
current_map_index: 9 and current_key_index: 2
'.' => Continue
current_map_index: 10 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 2
Checking if key position is valid. Key: 3 and Map Slice: ##.
Key too big. map_slice length: 3, index of '.': 2
'#' and invalid key position => Fail

Checking if key position is valid. Key: 3 and Map Slice: ?##.
damaged_section_length: 3
current_map_index: 10 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 14 and current_key_index: 3
Keys are all used and at end of map => Success





Getting cases for Map: ?#?#?#?#?#?#?#? with Key: { 1, 3, 1, 6 }

current_map_index: 0 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 1 and current_key_index: 0
Checking if key position is valid. Key: 1 and Map Slice: #?#?#?#?#?#?#?
damaged_section_length: 1
'#' and valid key position => use key and continue
current_map_index: 3 and current_key_index: 1
Checking if key position is valid. Key: 3 and Map Slice: #?#?#?#?#?#?
damaged_section_length: 1
'#' and valid key position => use key and continue
current_map_index: 7 and current_key_index: 2
Checking if key position is valid. Key: 1 and Map Slice: #?#?#?#?
damaged_section_length: 1
'#' and valid key position => use key and continue
current_map_index: 9 and current_key_index: 3
Checking if key position is valid. Key: 6 and Map Slice: #?#?#?
damaged_section_length: 1
'#' and valid key position => use key and continue
current_map_index: 16 and current_key_index: 4
Keys are all used and at end of map => Success

Checking if key position is valid. Key: 1 and Map Slice: ?#?#?#?#?#?#?#?
damaged_section_length: 2


Getting cases for Map: ????.#...#... with Key: { 4, 1, 1 }

current_map_index: 0 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 1 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 2 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 3 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 4 and current_key_index: 0
'.' => Continue
current_map_index: 5 and current_key_index: 0
Checking if key position is valid. Key: 4 and Map Slice: #...#...
Key too big. map_slice length: 8, index of '.': 1
'#' and invalid key position => Fail

Checking if key position is valid. Key: 4 and Map Slice: ?.#...#...
Key too big. map_slice length: 10, index of '.': 1

Checking if key position is valid. Key: 4 and Map Slice: ??.#...#...
Key too big. map_slice length: 11, index of '.': 2

Checking if key position is valid. Key: 4 and Map Slice: ???.#...#...
Key too big. map_slice length: 12, index of '.': 3

Checking if key position is valid. Key: 4 and Map Slice: ????.#...#...
damaged_section_length: 1
current_map_index: 0 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 5 and current_key_index: 1
Checking if key position is valid. Key: 1 and Map Slice: #...#...
damaged_section_length: 1
'#' and valid key position => use key and continue
current_map_index: 7 and current_key_index: 2
'.' => Continue
current_map_index: 8 and current_key_index: 2
'.' => Continue
current_map_index: 9 and current_key_index: 2
Checking if key position is valid. Key: 1 and Map Slice: #...
damaged_section_length: 1
'#' and valid key position => use key and continue
current_map_index: 11 and current_key_index: 3
Keys are all used and rest of map contains no '#' => Success



Getting cases for Map: ????.######..#####. with Key: { 1, 6, 5 }

current_map_index: 0 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 1 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 2 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 3 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 4 and current_key_index: 0
'.' => Continue
current_map_index: 5 and current_key_index: 0
Checking if key position is valid. Key: 1 and Map Slice: ######..#####.
damaged_section_length: 6
'#' and invalid key position => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?.######..#####.
damaged_section_length: 1
current_map_index: 3 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 5 and current_key_index: 1
Checking if key position is valid. Key: 6 and Map Slice: ######..#####.
damaged_section_length: 6
'#' and valid key position => use key and continue
current_map_index: 12 and current_key_index: 2
'.' => Continue
current_map_index: 13 and current_key_index: 2
Checking if key position is valid. Key: 5 and Map Slice: #####.
damaged_section_length: 5
'#' and valid key position => use key and continue
current_map_index: 19 and current_key_index: 3
Keys are all used and at end of map => Success


Checking if key position is valid. Key: 1 and Map Slice: ??.######..#####.
damaged_section_length: 1
current_map_index: 2 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 4 and current_key_index: 1
'.' => Continue
current_map_index: 5 and current_key_index: 1
Checking if key position is valid. Key: 6 and Map Slice: ######..#####.
damaged_section_length: 6
'#' and valid key position => use key and continue
current_map_index: 12 and current_key_index: 2
'.' => Continue
current_map_index: 13 and current_key_index: 2
Checking if key position is valid. Key: 5 and Map Slice: #####.
damaged_section_length: 5
'#' and valid key position => use key and continue
current_map_index: 19 and current_key_index: 3
Keys are all used and at end of map => Success


Checking if key position is valid. Key: 1 and Map Slice: ???.######..#####.
damaged_section_length: 1
current_map_index: 1 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 3 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 4 and current_key_index: 1
'.' => Continue
current_map_index: 5 and current_key_index: 1
Checking if key position is valid. Key: 6 and Map Slice: ######..#####.
damaged_section_length: 6
'#' and valid key position => use key and continue
current_map_index: 12 and current_key_index: 2
'.' => Continue
current_map_index: 13 and current_key_index: 2
Checking if key position is valid. Key: 5 and Map Slice: #####.
damaged_section_length: 5
'#' and valid key position => use key and continue
current_map_index: 19 and current_key_index: 3
Keys are all used and at end of map => Success

Checking if key position is valid. Key: 6 and Map Slice: ?.######..#####.
Key too big. map_slice length: 16, index of '.': 1


Checking if key position is valid. Key: 1 and Map Slice: ????.######..#####.
damaged_section_length: 1
current_map_index: 0 and current_key_index: 0
Valid key position so try using key as well
current_map_index: 2 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 3 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 4 and current_key_index: 1
'.' => Continue
current_map_index: 5 and current_key_index: 1
Checking if key position is valid. Key: 6 and Map Slice: ######..#####.
damaged_section_length: 6
'#' and valid key position => use key and continue
current_map_index: 12 and current_key_index: 2
'.' => Continue
current_map_index: 13 and current_key_index: 2
Checking if key position is valid. Key: 5 and Map Slice: #####.
damaged_section_length: 5
'#' and valid key position => use key and continue
current_map_index: 19 and current_key_index: 3
Keys are all used and at end of map => Success

Checking if key position is valid. Key: 6 and Map Slice: ?.######..#####.
Key too big. map_slice length: 16, index of '.': 1

Checking if key position is valid. Key: 6 and Map Slice: ??.######..#####.
Key too big. map_slice length: 17, index of '.': 2



Getting cases for Map: ?###???????? with Key: { 3, 2, 1 }

current_map_index: 0 and current_key_index: 0
'?', always try case where key does not go here
current_map_index: 1 and current_key_index: 0
Checking if key position is valid. Key: 3 and Map Slice: ###????????
damaged_section_length: 3
'#' and valid key position => use key and continue
current_map_index: 5 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 6 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 7 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 8 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 9 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 10 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 1
'?', always try case where key does not go here
current_map_index: 12 and current_key_index: 1
Keys are not all used but at end of map => Fail

Checking if key position is valid. Key: 2 and Map Slice: ?

Checking if key position is valid. Key: 2 and Map Slice: ??
damaged_section_length: 1
current_map_index: 10 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 13 and current_key_index: 2
Keys are not all used but at end of map => Fail


Checking if key position is valid. Key: 2 and Map Slice: ???
damaged_section_length: 1
current_map_index: 9 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 12 and current_key_index: 2
Keys are not all used but at end of map => Fail


Checking if key position is valid. Key: 2 and Map Slice: ????
damaged_section_length: 1
current_map_index: 8 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 11 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 12 and current_key_index: 2
Keys are not all used but at end of map => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?
damaged_section_length: 1
current_map_index: 11 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 13 and current_key_index: 3
Keys are all used and at end of map => Success



Checking if key position is valid. Key: 2 and Map Slice: ?????
damaged_section_length: 1
current_map_index: 7 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 10 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 12 and current_key_index: 2
Keys are not all used but at end of map => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?
damaged_section_length: 1
current_map_index: 11 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 13 and current_key_index: 3
Keys are all used and at end of map => Success


Checking if key position is valid. Key: 1 and Map Slice: ??
damaged_section_length: 1
current_map_index: 10 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 12 and current_key_index: 3
Keys are all used and at end of map => Success



Checking if key position is valid. Key: 2 and Map Slice: ??????
damaged_section_length: 1
current_map_index: 6 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 9 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 10 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 12 and current_key_index: 2
Keys are not all used but at end of map => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?
damaged_section_length: 1
current_map_index: 11 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 13 and current_key_index: 3
Keys are all used and at end of map => Success


Checking if key position is valid. Key: 1 and Map Slice: ??
damaged_section_length: 1
current_map_index: 10 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 12 and current_key_index: 3
Keys are all used and at end of map => Success


Checking if key position is valid. Key: 1 and Map Slice: ???
damaged_section_length: 1
current_map_index: 9 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 11 and current_key_index: 3
Keys are all used and rest of map contains no '#' => Success



Checking if key position is valid. Key: 2 and Map Slice: ???????
damaged_section_length: 1
current_map_index: 5 and current_key_index: 1
Valid key position so try using key as well
current_map_index: 8 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 9 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 10 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 11 and current_key_index: 2
'?', always try case where key does not go here
current_map_index: 12 and current_key_index: 2
Keys are not all used but at end of map => Fail

Checking if key position is valid. Key: 1 and Map Slice: ?
damaged_section_length: 1
current_map_index: 11 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 13 and current_key_index: 3
Keys are all used and at end of map => Success


Checking if key position is valid. Key: 1 and Map Slice: ??
damaged_section_length: 1
current_map_index: 10 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 12 and current_key_index: 3
Keys are all used and at end of map => Success


Checking if key position is valid. Key: 1 and Map Slice: ???
damaged_section_length: 1
current_map_index: 9 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 11 and current_key_index: 3
Keys are all used and rest of map contains no '#' => Success


Checking if key position is valid. Key: 1 and Map Slice: ????
damaged_section_length: 1
current_map_index: 8 and current_key_index: 2
Valid key position so try using key as well
current_map_index: 10 and current_key_index: 3
Keys are all used and rest of map contains no '#' => Success



Checking if key position is valid. Key: 3 and Map Slice: ?###????????
damaged_section_length: 4
